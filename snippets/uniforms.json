{
	"uniform: TIME": {
		"prefix": ["TIME"], 
		"body": "TIME",
		"description": "float: the time in seconds since the scene started rendering."
	},
	"uniform: FRAMECOUNT": {
		"prefix": ["FRAMECOUNT"], 
		"body": "FRAMECOUNT",
		"description": "float: the number of frames since the scene started rendering."
	},
    "uniform: syn_Level": {
		"prefix": ["syn_Level", "lvl", "volume", "audio"], 
		"body": "syn_Level",
		"description": "float: loudness of entire spectrum"
	},
	"uniform: syn_BassLevel": {
		"prefix": ["syn_BassLevel", "lvl", "volume", "audio"], 
		"body": "syn_BassLevel",
		"description": "float: loudness of bass frequencies"
	},
	"uniform: syn_MidLevel": {
		"prefix": ["syn_MidLevel", "lvl", "volume", "audio"], 
		"body": "syn_MidLevel",
		"description": "float: loudness of mid frequencies"
	},
	"uniform: syn_MidHighLevel": {
		"prefix": ["syn_MidHighLevel", "lvl", "volume", "audio"], 
		"body": "syn_MidHighLevel",
		"description": "float: loudness of mid high frequencies"
	},
	"uniform: syn_HighLevel": {
		"prefix": ["syn_HighLevel", "lvl", "volume", "audio"], 
		"body": "syn_HighLevel",
		"description": "float: loudness of high frequencies"
	},
	"uniform: syn_Hits": {
		"prefix": ["syn_Hits", "volume", "audio"], 
		"body": "syn_Hits",
		"description": "float: hits of entire spectrum"
	},
	"uniform: syn_BassHits": {
		"prefix": ["syn_BassHits", "volume", "audio"],
		"body": "syn_BassHits",
		"description": "float: hits in bass frequencies"
	},
	"uniform: syn_MidHits": {
		"prefix": ["syn_MidHits", "volume", "audio"], 
		"body": "syn_MidHits",
		"description": "float: hits in mid frequencies"
	},
	"uniform: syn_MidHighHits": {
		"prefix": ["syn_MidHighHits", "volume", "audio"], 
		"body": "syn_MidHighHits",
		"description": "float: hits in mid high frequencies"
	},
	"uniform: syn_HighHits": {
		"prefix": ["syn_HighHits", "high", "volume", "audio"], 
		"body": "syn_HighHits",
		"description": "float: hits in high frequencies"
	},
	"uniform: syn_Time": {
		"prefix": ["syn_Time", "time", "audio"], 
		"body": "syn_Time",
		"description": "float: a timer that increases speed based on the entire spectrum"
	},
	"uniform: syn_BassTime": {
		"prefix": ["syn_BassTime", "bass", "time", "audio"], 
		"body": "syn_BassTime",
		"description": "float: a timer that increases speed based on the loudness of bass frequencies"
	},
	"uniform: syn_MidTime": {
		"prefix": ["syn_MidTime", "mid", "time", "audio"], 
		"body": "syn_MidTime",
		"description": "float: a timer that increases speed based on the loudness of mid frequencies"
	},
	"uniform: syn_MidHighTime": {
		"prefix": ["syn_MidHighTime", "mid", "high", "time", "audio"], 
		"body": "syn_MidHighTime",
		"description": "float: a timer that increases speed based on the loudness of mid high frequencies"
	},
	"uniform: syn_HighTime": {
		"prefix": ["syn_HighTime", "high", "time", "audio"], 
		"body": "syn_HighTime",
		"description": "float: a timer that increases speed based on the loudness of high frequencies"
	},
	"uniform: syn_CurvedTime": {
		"prefix": ["syn_CurvedTime", "time", "audio"], 
		"body": "syn_CurvedTime",
		"description": "float: a timer that increases speed based on the entire spectrum with high acceleration"
	},
	"uniform: syn_Presence": {
		"prefix": ["syn_Presence", "audio"],
		"body": "syn_Presence",
		"description": "float: tracks the general presence of the entire spectrum"
	},
	"uniform: syn_BassPresence": {
		"prefix": ["syn_BassPresence", "audio"],
		"body": "syn_BassPresence",
		"description": "float: tracks the general presence of bass frequencies"
	},
	"uniform: syn_MidPresence": {
		"prefix": ["syn_MidPresence", "audio"],
		"body": "syn_MidPresence",
		"description": "float: tracks the general presence of mid frequencies"
	},
	"uniform: syn_MidHighPresence": {
		"prefix": ["syn_MidHighPresence", "audio"],
		"body": "syn_MidHighPresence",
		"description": "float: tracks the general presence of mid high frequencies"
	},
	"uniform: syn_HighPresence": {
		"prefix": ["syn_HighPresence", "audio"],
		"body": "syn_HighPresence",
		"description": "float: tracks the general presence of high frequencies"
	},
	"uniform: syn_OnBeat": {
		"prefix": ["syn_OnBeat", "audio"], 
		"body": "syn_OnBeat",
		"description": "float: returns 1.0 immediately when a beat is detected, then quickly falls back to zero."
	},
	"uniform: syn_ToggleOnBeat": {
		"prefix": ["syn_ToggleOnBeat", "audio"],
		"body": "syn_ToggleOnBeat",
		"description": "float: returns 0.0 until a beat is detected, then stays at 1.0 until another beat is detected, then toggles back to 0.0, etc. Smoothly transitions between values using a logistic curve"
	},
	"uniform: syn_RandomOnBeat": {
		"prefix": ["syn_RandomOnBeat", "audio"],
		"body": "syn_RandomOnBeat",
		"description": "float: returns a new random float in the range 0.0 to 1.0 whenever a beat is detected. Smoothly transitions using a logistic curve"
	},
	"uniform: syn_BeatTime": {
		"prefix": ["syn_BeatTime", "audio"],
		"body": "syn_BeatTime",
		"description": "float: a clock that increments by 1.0 whenever a beat is detected."
	},
	"uniform: syn_BPM": {
		"prefix": ["syn_BPM", "audio"], 
		"body": "syn_BPM",
		"description": "float: BPM detected for the current song"
	},
	"uniform: syn_BPMConfidence": {
		"prefix": ["syn_BPMConfidence", "audio"], 
		"body": "syn_BPMConfidence",
		"description": "float: estimates the stability of the BPM in the current song. If the song is very consistent, this will be close to 1.0. If the BPM is shifting frequently, it will stay close to 0.0."
	},
	"uniform: syn_BPMTwitcher": {
		"prefix": ["syn_BPMTwitcher", "audio"], 
		"body": "syn_BPMTwitcher",
		"description": "float: A clock that increments every beat. In contrast to syn_BeatTime, it exponentially jumps in value to the next beat, allowing smoother action in the scene"
	},
	"uniform: syn_BPMSin": {
		"prefix": ["syn_BPMSin", "LFO", "audio"], 
		"body": "syn_BPMSin",
		"description": "float: a sine wave that oscillates between 0.0 and 1.0, with a frequency equal to the current BPM and a phase that is usually synced to the beat."
	},
	"uniform: syn_BPMSin2": {
		"prefix": ["syn_BPMSin2", "LFO", "audio"], 
		"body": "syn_BPMSin2",
		"description": "float: a sine wave that oscillates between 0.0 and 1.0, with a frequency equal to HALF of the current BPM for slower action."
	},
	"uniform: syn_BPMSin4": {
		"prefix": ["syn_BPMSin4", "LFO", "audio"], 
		"body": "syn_BPMSin4",
		"description": "float: a sine wave that oscillates between 0.0 and 1.0, with a frequency equal to ONE QUARTER of the current BPM for slower action."
	},
	"uniform: syn_BPMTri": {
		"prefix": ["syn_BPMTri", "LFO", "audio"], 
		"body": "syn_BPMTri",
		"description": "float: a triangle wave that oscillates between 0.0 and 1.0, with a frequency equal to the current BPM and a phase that is usually synced to the beat."
	},
	"uniform: syn_BPMTri2": {
		"prefix": ["syn_BPMTri2", "LFO", "audio"], 
		"body": "syn_BPMTri2",
		"description": "float: a triangle wave that oscillates between 0.0 and 1.0, with a frequency equal to HALF of the current BPM for slower action."
	},
	"uniform: syn_BPMTri4": {
		"prefix": ["syn_BPMTri4", "LFO", "audio"], 
		"body": "syn_BPMTri4",
		"description": "float: a triangle wave that oscillates between 0.0 and 1.0, with a frequency equal to ONE QUARTER of the current BPM for even slower action."
	},
	"uniform: syn_FadeInOut": {
		"prefix": ["syn_FadeInOut", "audio"], 
		"body": "syn_FadeInOut",
		"description": "float: slowly rises to 1.0 as music starts, then slowly falls to 0.0 as the music ends. Great for fading in and out of a scene like a movie would."
	},
	"uniform: syn_Intensity": {
		"prefix": ["syn_Intensity", "audio"], 
		"body": "syn_Intensity",
		"description": "float: similar to syn_FadeInOut, but slowly accumulates to 1.0 depending on the intensity of the song."
	},
	"uniform: _mouse": {
		"prefix": ["_mouse","mouse"], 
		"body": "_mouse",
		"description": "vec4: emulates Shadertoy's iMouse variable. XY holds click information, ZW holds last click location."
	},
	"uniform: _muv": {
		"prefix": ["_muv","mouse"], 
		"body": "_muv",
		"description": "vec2: normalized mouse position from 0-1. Comparable to _uv"
	},
	"uniform: _muvc": {
		"prefix": ["_muvc","mouse"], 
		"body": "_muvc",
		"description": "vec2: aspect ratio corrected mouse position. Comparable to _uvc"
	},
	"uniform: _click": {
		"prefix": ["_click","click","mouse"], 
		"body": "_click",
		"description": "vec3: holds current click data for Left (x), Right (y) and Middle (z) click."
	}
}